********************************************************************************************
BI_16: MATCH (person1:PERSON)<-[:HASCREATOR]-(msg)-[:HASTAG]->(tag:TAG),
      (person1)-[:KNOWS]-(person2:PERSON)<-[:HASCREATOR]-(msg)
WHERE msg.creationDate = $date1 AND tag.name = $name1
    	OR msg.creationDate = $date2 AND tag.name = $name2
Return count(person1);

logical plan 0: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[person1], aggFunction=COUNT, alias='$f0', distinct=false}]])
  LogicalFilter(condition=[OR(AND(=(msg.creationDate, ?0), =(tag.name, ?1)), AND(=(msg.creationDate, ?2), =(tag.name, ?3)))])
    GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, COMMENT, TAG), EdgeLabel(HASTAG, POST, TAG)]], alias=[tag], startAlias=[msg], opt=[OUT], physicalOpt=[VERTEX])
      MultiJoin(joinFilter=[=(person1, person1)], isFullOuterJoin=[false], joinTypes=[[INNER, INNER]], outerJoinConditions=[[NULL, NULL]], projFields=[[ALL, ALL]])
        GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASCREATOR]}], alias=[person1], startAlias=[msg], opt=[OUT], physicalOpt=[VERTEX])
          CommonTableScan(table=[[common#288095004]])
        GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[KNOWS]}], alias=[person1], startAlias=[person2], opt=[BOTH], physicalOpt=[VERTEX])
          CommonTableScan(table=[[common#288095004]])
common#288095004:
GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASCREATOR]}], alias=[msg], startAlias=[person2], opt=[IN], physicalOpt=[VERTEX])
  GraphLogicalSource(tableConfig=[{isAll=false, tables=[PERSON]}], alias=[person2], opt=[VERTEX])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception
logical plan 1: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[person1], aggFunction=COUNT, alias='$f0', distinct=false}]])
  LogicalFilter(condition=[OR(AND(=(msg.creationDate, ?0), =(tag.name, ?1)), AND(=(msg.creationDate, ?2), =(tag.name, ?3)))])
    GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, COMMENT, TAG), EdgeLabel(HASTAG, POST, TAG)]], alias=[tag], startAlias=[msg], opt=[OUT], physicalOpt=[VERTEX])
      MultiJoin(joinFilter=[=(person2, person2)], isFullOuterJoin=[false], joinTypes=[[INNER, INNER]], outerJoinConditions=[[NULL, NULL]], projFields=[[ALL, ALL]])
        GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASCREATOR]}], alias=[person2], startAlias=[msg], opt=[OUT], physicalOpt=[VERTEX])
          CommonTableScan(table=[[common#492299958]])
        GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[KNOWS]}], alias=[person2], startAlias=[person1], opt=[BOTH], physicalOpt=[VERTEX])
          CommonTableScan(table=[[common#492299958]])
common#492299958:
GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASCREATOR]}], alias=[person1], startAlias=[msg], opt=[OUT], physicalOpt=[VERTEX])
  GraphLogicalSource(tableConfig=[{isAll=false, tables=[POST, COMMENT]}], alias=[msg], opt=[VERTEX])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception



********************************************************************************************
BI_2: MATCH (tag:TAG)-[:HASTYPE]->(:TAGCLASS {name: $tagClass}), 
      (tag)<-[:HASTAG]-(message:POST|COMMENT)
WHERE message.creationDate < $date3
Return count(tag);

logical plan 0: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[tag], aggFunction=COUNT, alias='$f0', distinct=false}]])
  GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[POST, COMMENT]}], alias=[message], fusedFilter=[[<(_.creationDate, ?1)]], opt=[START], physicalOpt=[ITSELF])
    GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, COMMENT, TAG), EdgeLabel(HASTAG, POST, TAG)]], alias=[_], startAlias=[tag], opt=[IN], physicalOpt=[VERTEX])
      GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASTYPE]}], alias=[tag], opt=[IN], physicalOpt=[VERTEX])
        GraphLogicalSource(tableConfig=[{isAll=false, tables=[TAGCLASS]}], alias=[_], opt=[VERTEX], uniqueKeyFilters=[=(_.name, ?0)])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception
logical plan 1: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[tag], aggFunction=COUNT, alias='$f0', distinct=false}]])
  GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[POST, COMMENT]}], alias=[message], fusedFilter=[[<(_.creationDate, ?1)]], opt=[START], physicalOpt=[ITSELF])
    GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, COMMENT, TAG), EdgeLabel(HASTAG, POST, TAG)]], alias=[_], startAlias=[tag], opt=[IN], physicalOpt=[VERTEX])
      GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[TAGCLASS]}], alias=[_], fusedFilter=[[=(_.name, ?0)]], opt=[END], physicalOpt=[ITSELF])
        GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASTYPE]}], alias=[_], startAlias=[tag], opt=[OUT], physicalOpt=[VERTEX])
          GraphLogicalSource(tableConfig=[{isAll=false, tables=[TAG]}], alias=[tag], opt=[VERTEX])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception



********************************************************************************************
BI_3: MATCH
  (country:COUNTRY {name: "China"})<-[:ISPARTOF]-()<-[:ISLOCATEDIN]-
  (person:PERSON)<-[:HASMODERATOR]-(forum:FORUM)-[:CONTAINEROF]->
  (post:POST)<-[:REPLYOF*0..6]-(message)-[:HASTAG]->(:TAG)-[:HASTYPE]->(:TAGCLASS {name: "Song"})
RETURN count(country);

logical plan 0: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[country], aggFunction=COUNT, alias='$f0', distinct=false}]])
  LogicalJoin(condition=[=(message, message)], joinType=[inner])
    GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[POST, COMMENT]}], alias=[message], opt=[START], physicalOpt=[ITSELF])
      GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, COMMENT, TAG), EdgeLabel(HASTAG, POST, TAG)]], alias=[_], startAlias=[PATTERN_VERTEX$11], opt=[IN], physicalOpt=[VERTEX])
        GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASTYPE]}], alias=[PATTERN_VERTEX$11], opt=[IN], physicalOpt=[VERTEX])
          GraphLogicalSource(tableConfig=[{isAll=false, tables=[TAGCLASS]}], alias=[_], opt=[VERTEX], uniqueKeyFilters=[=(_.name, _UTF-8'Song')])
    GraphLogicalGetV(tableConfig=[{isAll=false, tables=[POST, COMMENT]}], alias=[message], opt=[END])
      GraphLogicalPathExpand(fused=[GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[REPLYOF]}], alias=[_], opt=[IN], physicalOpt=[VERTEX])
], fetch=[6], path_opt=[ARBITRARY], result_opt=[END_V], alias=[_], start_alias=[post])
        GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[CONTAINEROF]}], alias=[post], startAlias=[forum], opt=[OUT], physicalOpt=[VERTEX])
          GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASMODERATOR]}], alias=[forum], startAlias=[person], opt=[IN], physicalOpt=[VERTEX])
            GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[PERSON]}], alias=[person], opt=[START], physicalOpt=[ITSELF])
              GraphPhysicalExpand(tableConfig=[[EdgeLabel(ISLOCATEDIN, PERSON, CITY)]], alias=[_], startAlias=[PATTERN_VERTEX$1], opt=[IN], physicalOpt=[VERTEX])
                GraphPhysicalExpand(tableConfig=[[EdgeLabel(ISPARTOF, CITY, COUNTRY)]], alias=[PATTERN_VERTEX$1], startAlias=[country], opt=[IN], physicalOpt=[VERTEX])
                  GraphLogicalSource(tableConfig=[{isAll=false, tables=[COUNTRY]}], alias=[country], opt=[VERTEX], uniqueKeyFilters=[=(_.name, _UTF-8'China')])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception
logical plan 1: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[country], aggFunction=COUNT, alias='$f0', distinct=false}]])
  GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[TAGCLASS]}], alias=[_], fusedFilter=[[=(_.name, _UTF-8'Song')]], opt=[END], physicalOpt=[ITSELF])
    GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASTYPE]}], alias=[_], startAlias=[PATTERN_VERTEX$11], opt=[OUT], physicalOpt=[VERTEX])
      GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, COMMENT, TAG), EdgeLabel(HASTAG, POST, TAG)]], alias=[PATTERN_VERTEX$11], startAlias=[message], opt=[OUT], physicalOpt=[VERTEX])
        GraphLogicalGetV(tableConfig=[{isAll=false, tables=[POST, COMMENT]}], alias=[message], opt=[END])
          GraphLogicalPathExpand(fused=[GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[REPLYOF]}], alias=[_], opt=[IN], physicalOpt=[VERTEX])
], fetch=[6], path_opt=[ARBITRARY], result_opt=[END_V], alias=[_], start_alias=[post])
            GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[CONTAINEROF]}], alias=[post], startAlias=[forum], opt=[OUT], physicalOpt=[VERTEX])
              GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASMODERATOR]}], alias=[forum], startAlias=[person], opt=[IN], physicalOpt=[VERTEX])
                GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[PERSON]}], alias=[person], opt=[START], physicalOpt=[ITSELF])
                  GraphPhysicalExpand(tableConfig=[[EdgeLabel(ISLOCATEDIN, PERSON, CITY)]], alias=[_], startAlias=[PATTERN_VERTEX$1], opt=[IN], physicalOpt=[VERTEX])
                    GraphPhysicalExpand(tableConfig=[[EdgeLabel(ISPARTOF, CITY, COUNTRY)]], alias=[PATTERN_VERTEX$1], startAlias=[country], opt=[IN], physicalOpt=[VERTEX])
                      GraphLogicalSource(tableConfig=[{isAll=false, tables=[COUNTRY]}], alias=[country], opt=[VERTEX], uniqueKeyFilters=[=(_.name, _UTF-8'China')])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception



********************************************************************************************
BI_5: MATCH (tag:TAG {name: $tag})<-[:HASTAG]-(message:POST)-[:HASCREATOR]->(person:PERSON), 
      (message)<-[likes:LIKES]-(:PERSON), 
      (message)<-[:REPLYOF]-(reply:COMMENT)
Return count(tag);

logical plan 0: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[tag], aggFunction=COUNT, alias='$f0', distinct=false}]])
  GraphPhysicalExpand(tableConfig=[[EdgeLabel(REPLYOF, COMMENT, POST)]], alias=[reply], startAlias=[message], opt=[IN], physicalOpt=[VERTEX])
    GraphLogicalGetV(tableConfig=[{isAll=false, tables=[PERSON]}], alias=[_], opt=[START])
      GraphLogicalExpand(tableConfig=[[EdgeLabel(LIKES, PERSON, POST)]], alias=[likes], startAlias=[message], opt=[IN])
        GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASCREATOR, POST, PERSON)]], alias=[person], startAlias=[message], opt=[OUT], physicalOpt=[VERTEX])
          GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[POST]}], alias=[message], opt=[START], physicalOpt=[ITSELF])
            GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, POST, TAG)]], alias=[_], startAlias=[tag], opt=[IN], physicalOpt=[VERTEX])
              GraphLogicalSource(tableConfig=[{isAll=false, tables=[TAG]}], alias=[tag], fusedFilter=[[=(_.name, ?0)]], opt=[VERTEX])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception
logical plan 1: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[tag], aggFunction=COUNT, alias='$f0', distinct=false}]])
  GraphPhysicalExpand(tableConfig=[[EdgeLabel(REPLYOF, COMMENT, POST)]], alias=[reply], startAlias=[message], opt=[IN], physicalOpt=[VERTEX])
    GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASCREATOR, POST, PERSON)]], alias=[person], startAlias=[message], opt=[OUT], physicalOpt=[VERTEX])
      GraphLogicalGetV(tableConfig=[{isAll=false, tables=[PERSON]}], alias=[_], opt=[START])
        GraphLogicalExpand(tableConfig=[[EdgeLabel(LIKES, PERSON, POST)]], alias=[likes], startAlias=[message], opt=[IN])
          GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[TAG]}], alias=[tag], fusedFilter=[[=(_.name, ?0)]], opt=[END], physicalOpt=[ITSELF])
            GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, POST, TAG)]], alias=[_], startAlias=[message], opt=[OUT], physicalOpt=[VERTEX])
              GraphLogicalSource(tableConfig=[{isAll=false, tables=[POST]}], alias=[message], opt=[VERTEX])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception



********************************************************************************************
BI_6: MATCH (tag:TAG {name: $tag})<-[:HASTAG]-(message1:POST)-[:HASCREATOR]->(person1:PERSON), 
      (message1)<-[:LIKES]-(person2:PERSON),
      (person2)<-[:HASCREATOR]-(message2:POST|COMMENT)<-[like:LIKES]-(person3:PERSON)
RETURN count(tag);

logical plan 0: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[tag], aggFunction=COUNT, alias='$f0', distinct=false}]])
  GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASCREATOR, POST, PERSON)]], alias=[person1], startAlias=[message1], opt=[OUT], physicalOpt=[VERTEX])
    LogicalJoin(condition=[=(person2, person2)], joinType=[inner])
      GraphPhysicalExpand(tableConfig=[[EdgeLabel(LIKES, PERSON, POST)]], alias=[person2], startAlias=[message1], opt=[IN], physicalOpt=[VERTEX])
        GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[POST]}], alias=[message1], opt=[START], physicalOpt=[ITSELF])
          GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, POST, TAG)]], alias=[_], startAlias=[tag], opt=[IN], physicalOpt=[VERTEX])
            GraphLogicalSource(tableConfig=[{isAll=false, tables=[TAG]}], alias=[tag], fusedFilter=[[=(_.name, ?0)]], opt=[VERTEX])
      GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASCREATOR]}], alias=[person2], startAlias=[message2], opt=[OUT], physicalOpt=[VERTEX])
        GraphLogicalGetV(tableConfig=[{isAll=false, tables=[POST, COMMENT]}], alias=[message2], opt=[END])
          GraphLogicalExpand(tableConfig=[{isAll=false, tables=[LIKES]}], alias=[like], startAlias=[person3], opt=[OUT])
            GraphLogicalSource(tableConfig=[{isAll=false, tables=[PERSON]}], alias=[person3], opt=[VERTEX])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception
logical plan 1: root:
GraphLogicalAggregate(keys=[{variables=[], aliases=[]}], values=[[{operands=[tag], aggFunction=COUNT, alias='$f0', distinct=false}]])
  LogicalJoin(condition=[=(message2, message2)], joinType=[inner])
    GraphLogicalGetV(tableConfig=[{isAll=false, tables=[POST, COMMENT]}], alias=[message2], opt=[END])
      GraphLogicalExpand(tableConfig=[{isAll=false, tables=[LIKES]}], alias=[like], startAlias=[person3], opt=[OUT])
        GraphLogicalSource(tableConfig=[{isAll=false, tables=[PERSON]}], alias=[person3], opt=[VERTEX])
    GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASCREATOR, POST, PERSON)]], alias=[person1], startAlias=[message1], opt=[OUT], physicalOpt=[VERTEX])
      GraphPhysicalExpand(tableConfig=[{isAll=false, tables=[HASCREATOR]}], alias=[message2], startAlias=[person2], opt=[IN], physicalOpt=[VERTEX])
        GraphPhysicalExpand(tableConfig=[[EdgeLabel(LIKES, PERSON, POST)]], alias=[person2], startAlias=[message1], opt=[IN], physicalOpt=[VERTEX])
          GraphPhysicalGetV(tableConfig=[{isAll=false, tables=[TAG]}], alias=[tag], fusedFilter=[[=(_.name, ?0)]], opt=[END], physicalOpt=[ITSELF])
            GraphPhysicalExpand(tableConfig=[[EdgeLabel(HASTAG, POST, TAG)]], alias=[_], startAlias=[message1], opt=[OUT], physicalOpt=[VERTEX])
              GraphLogicalSource(tableConfig=[{isAll=false, tables=[POST]}], alias=[message1], opt=[VERTEX])

execution exception io.grpc.StatusException: UNAVAILABLE: io exception



